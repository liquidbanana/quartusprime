library ieee;

use ieee.std_logic_1164.all;

use ieee.std_logic_unsigned.all;

 

entity part511 is

 

                port(

                                clk                           : in         std_logic;

                                coin        : in         std_logic_vector(1 DOWNTO 0); -- ( 0 represents nickel, 1 represents dime)

                                reset     : in         std_logic;

                                data_out             : out     std_logic;

                                ten: out std_logic;

                                five: out std_logic);

 

end entity;

 

architecture vend of part511 is

 

                type state_type is ( s1, s2, s3, s4, s5);

               

                signal state   : state_type;

 

begin

               

                process (clk, reset,coin)

                begin

                                if reset = '0' then

                                                state <= s1;

 

                                elsif (rising_edge(clk)) then

                                                case state is

                                                                when s1=>

                                                                                if coin(1) = '1' then

                                                                                                state <= s2;

                                                                               

                                                                                elsif coin(0) = '1' then

                                                                                                state <= s3;

                                                                                else

                                                                                                state <= s1;

                                                                                end if;

                                                                when s2=>

                                                                                if coin(1) = '1' then

                                                                                                state <= s5;

                                                                                elsif coin(0) = '1'then

                                                                                                state <= s4;

                                                                                else

                                                                                                state<= s2;

                                                                                end if;

                                                                when s3=>

                                                                                if coin(1) = '1' then

                                                                                                state <= s4;

                                                                                elsif coin(0) = '1'then

                                                                                                state <= s2;

                                                                                else

                                                                                                state <= s3;

                                                                                end if;

                                                                when s4 =>

                                                               

                                                                                                state <= s1;

                                                                when s5=>

                                                                                  

                                                                                                state <= s3;

                                                                                               

                                                end case;

                                end if;

                end process;

               

                ten <= coin(1);

                five <= coin(0);

               

               

                process (state,coin)

                begin

               

                                case state is

                                                when s1 =>

                                                                data_out <= '0';

                                                when s2 =>

                                                                data_out <= '0';

                                                when s3 =>

                                                                data_out <= '0';

                                                when s4 =>

                                                                data_out <= '1';

                                                when s5 =>

                                                                data_out <= '1';

                                end case;

                end process;

               

end ven;
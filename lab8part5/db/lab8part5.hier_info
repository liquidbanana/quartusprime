|lab8part5
RESET => REG[6].ACLR
RESET => REG[5].ACLR
RESET => REG[4].ACLR
RESET => REG[3].ACLR
RESET => REG[2].ACLR
RESET => REG[1].ACLR
RESET => REG[0].ACLR
RESET => REG[7].ENA
CLK => REG[0].CLK
CLK => REG[1].CLK
CLK => REG[2].CLK
CLK => REG[3].CLK
CLK => REG[4].CLK
CLK => REG[5].CLK
CLK => REG[6].CLK
CLK => REG[7].CLK
SW[0] => ripplecarry:r0.A
SW[0] => REG[0].DATAIN
SW[0] => DECODER:h0.z
SW[1] => ripplecarry:r1.A
SW[1] => REG[1].DATAIN
SW[1] => DECODER:h0.y
SW[2] => ripplecarry:r2.A
SW[2] => REG[2].DATAIN
SW[2] => DECODER:h0.x
SW[3] => ripplecarry:r3.A
SW[3] => REG[3].DATAIN
SW[3] => DECODER:h0.w
SW[4] => ripplecarry:r4.A
SW[4] => REG[4].DATAIN
SW[4] => DECODER:h1.z
SW[5] => ripplecarry:r5.A
SW[5] => REG[5].DATAIN
SW[5] => DECODER:h1.y
SW[6] => ripplecarry:r6.A
SW[6] => REG[6].DATAIN
SW[6] => DECODER:h1.x
SW[7] => ripplecarry:r7.A
SW[7] => DECODER:h1.w
SW[7] => REG[7].DATAIN
LEDR << ripplecarry:r7.C0
HEX0[0] << DECODER:h0.hex[0]
HEX0[1] << DECODER:h0.hex[1]
HEX0[2] << DECODER:h0.hex[2]
HEX0[3] << DECODER:h0.hex[3]
HEX0[4] << DECODER:h0.hex[4]
HEX0[5] << DECODER:h0.hex[5]
HEX0[6] << DECODER:h0.hex[6]
HEX1[0] << DECODER:h1.hex[0]
HEX1[1] << DECODER:h1.hex[1]
HEX1[2] << DECODER:h1.hex[2]
HEX1[3] << DECODER:h1.hex[3]
HEX1[4] << DECODER:h1.hex[4]
HEX1[5] << DECODER:h1.hex[5]
HEX1[6] << DECODER:h1.hex[6]
HEX2[0] << DECODER:h2.hex[0]
HEX2[1] << DECODER:h2.hex[1]
HEX2[2] << DECODER:h2.hex[2]
HEX2[3] << DECODER:h2.hex[3]
HEX2[4] << DECODER:h2.hex[4]
HEX2[5] << DECODER:h2.hex[5]
HEX2[6] << DECODER:h2.hex[6]
HEX3[0] << DECODER:h3.hex[0]
HEX3[1] << DECODER:h3.hex[1]
HEX3[2] << DECODER:h3.hex[2]
HEX3[3] << DECODER:h3.hex[3]
HEX3[4] << DECODER:h3.hex[4]
HEX3[5] << DECODER:h3.hex[5]
HEX3[6] << DECODER:h3.hex[6]
HEX4[0] << DECODER:h4.hex[0]
HEX4[1] << DECODER:h4.hex[1]
HEX4[2] << DECODER:h4.hex[2]
HEX4[3] << DECODER:h4.hex[3]
HEX4[4] << DECODER:h4.hex[4]
HEX4[5] << DECODER:h4.hex[5]
HEX4[6] << DECODER:h4.hex[6]
HEX5[0] << DECODER:h5.hex[0]
HEX5[1] << DECODER:h5.hex[1]
HEX5[2] << DECODER:h5.hex[2]
HEX5[3] << DECODER:h5.hex[3]
HEX5[4] << DECODER:h5.hex[4]
HEX5[5] << DECODER:h5.hex[5]
HEX5[6] << DECODER:h5.hex[6]


|lab8part5|ripplecarry:r0
A => ABXOR.IN0
B => C0.IN1
B => ABXOR.IN1
C => C0.IN1
C => S.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
C0 <= C0.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|ripplecarry:r1
A => ABXOR.IN0
B => C0.IN1
B => ABXOR.IN1
C => C0.IN1
C => S.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
C0 <= C0.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|ripplecarry:r2
A => ABXOR.IN0
B => C0.IN1
B => ABXOR.IN1
C => C0.IN1
C => S.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
C0 <= C0.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|ripplecarry:r3
A => ABXOR.IN0
B => C0.IN1
B => ABXOR.IN1
C => C0.IN1
C => S.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
C0 <= C0.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|ripplecarry:r4
A => ABXOR.IN0
B => C0.IN1
B => ABXOR.IN1
C => C0.IN1
C => S.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
C0 <= C0.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|ripplecarry:r5
A => ABXOR.IN0
B => C0.IN1
B => ABXOR.IN1
C => C0.IN1
C => S.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
C0 <= C0.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|ripplecarry:r6
A => ABXOR.IN0
B => C0.IN1
B => ABXOR.IN1
C => C0.IN1
C => S.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
C0 <= C0.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|ripplecarry:r7
A => ABXOR.IN0
B => C0.IN1
B => ABXOR.IN1
C => C0.IN1
C => S.IN1
S <= S.DB_MAX_OUTPUT_PORT_TYPE
C0 <= C0.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|DECODER:h0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
x => hex.IN0
x => hex.IN1
x => hex.IN1
x => hex.IN1
x => hex.IN0
x => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|DECODER:h1
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
x => hex.IN0
x => hex.IN1
x => hex.IN1
x => hex.IN1
x => hex.IN0
x => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|DECODER:h2
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
x => hex.IN0
x => hex.IN1
x => hex.IN1
x => hex.IN1
x => hex.IN0
x => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|DECODER:h3
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
x => hex.IN0
x => hex.IN1
x => hex.IN1
x => hex.IN1
x => hex.IN0
x => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|DECODER:h4
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
x => hex.IN0
x => hex.IN1
x => hex.IN1
x => hex.IN1
x => hex.IN0
x => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


|lab8part5|DECODER:h5
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
w => hex.IN0
x => hex.IN0
x => hex.IN1
x => hex.IN1
x => hex.IN1
x => hex.IN0
x => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
y => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
z => hex.IN1
hex[0] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[1] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[2] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[3] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[4] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[5] <= hex.DB_MAX_OUTPUT_PORT_TYPE
hex[6] <= hex.DB_MAX_OUTPUT_PORT_TYPE


